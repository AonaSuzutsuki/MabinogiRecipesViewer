<Window x:Class="CookInformationViewer.Views.CalcMaterials"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
        xmlns:commonViews="clr-namespace:CommonStyleLib.Views;assembly=CommonStyleLib"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:CookInformationViewer.Views"
        xmlns:behaviors="clr-namespace:CookInformationViewer.Views.Behaviors"
        xmlns:viewModels="clr-namespace:CookInformationViewer.ViewModels"
        xmlns:converters="clr-namespace:CookInformationViewer.Views.Converters"
        mc:Ignorable="d"
        d:DataContext="{d:DesignInstance viewModels:CalcMaterialsViewModel}"
        Title="CalcMaterials" Height="450" Width="800" Style="{DynamicResource WindowStyle}">
    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Loaded">
            <i:InvokeCommandAction Command="{Binding Loaded}" />
        </i:EventTrigger>
        <i:EventTrigger EventName="Closing">
            <i:InvokeCommandAction Command="{Binding Closing}" />
        </i:EventTrigger>
        <i:EventTrigger EventName="Activated">
            <i:InvokeCommandAction Command="{Binding Activated}" />
        </i:EventTrigger>
        <i:EventTrigger EventName="Deactivated">
            <i:InvokeCommandAction Command="{Binding Deactivated}" />
        </i:EventTrigger>
        <i:EventTrigger EventName="StateChanged">
            <i:InvokeCommandAction Command="{Binding StateChanged}" />
        </i:EventTrigger>
        <i:EventTrigger EventName="KeyDown">
            <commonViews:InvokeDelegateCommandAction Command="{Binding KeyDown}" CommandParameter="{Binding RelativeSource={RelativeSource Self}, Path=InvokeParameter}" />
        </i:EventTrigger>
    </i:Interaction.Triggers>

    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/Styles/Window.xaml" />
                <ResourceDictionary Source="/Styles/Button.xaml" />
                <ResourceDictionary Source="/Styles/ListBoxItem.xaml" />
                <ResourceDictionary Source="/Styles/Gauge.xaml" />
                <ResourceDictionary Source="pack://application:,,,/CommonStyleLib;component/Styles/Icon.xaml" />
                <ResourceDictionary Source="pack://application:,,,/CommonStyleLib;component/Styles/Main.xaml" />
                <ResourceDictionary Source="pack://application:,,,/CommonStyleLib;component/Styles/ListBoxStyle.xaml" />
                <ResourceDictionary>
                </ResourceDictionary>
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </Window.Resources>

    <Grid Style="{StaticResource ResourceKey=BackgroundGrid}">

        <Grid Grid.ColumnSpan="2" Margin="{Binding MainWindowMargin}">
            <StackPanel Orientation="Horizontal" Margin="5,0,0,0"
                        HorizontalAlignment="left"
                        VerticalAlignment="Top">
                <Image Source="{StaticResource Icon}" Width="15" Height="15" Stretch="Uniform" WindowChrome.IsHitTestVisibleInChrome="True">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="MouseDown">
                            <commonViews:InteractiveCommand Command="{Binding ImageMouseDown}" />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </Image>
                <Label Content="Mabinogi Cooking Recipes" Style="{StaticResource ResourceKey=StatTitle}" />
            </StackPanel>

            <StackPanel Orientation="Horizontal" Margin="5"
                        HorizontalAlignment="Right"
                        VerticalAlignment="Top">
                <Button Name="MainWindowMinimumBt" Content="{Binding MainWindowMinimumBtContent}" Style="{StaticResource CaptionButtonStyleKey}" Command="{Binding MainWindowMinimumBtClick}" />
                <Button Name="MainMaximumBt" Content="{Binding MainWindowMaximumBtContent}" Style="{StaticResource CaptionButtonStyleKey}" Command="{Binding MainWindowMaximumBtClick}" />
                <Button Name="MainWindowCloseBt" Content="{Binding MainWindowCloseBtContent}" Style="{StaticResource CaptionButtonStyleKey}" Command="{Binding MainWindowCloseBtClick}" />
            </StackPanel>

            <Grid Margin="5, 25, 5, 5">

                <Grid.RowDefinitions>
                    <RowDefinition Height="30" />
                    <RowDefinition Height="5" />
                    <RowDefinition />
                </Grid.RowDefinitions>

                <Grid>
                    <CheckBox Content="購入可能料理を除外" IsChecked="{Binding IgnoreCanPurchasableChecked.Value}" VerticalAlignment="Center" />

                    <Grid HorizontalAlignment="Center">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="50" />
                            <ColumnDefinition Width="5" />
                            <ColumnDefinition Width="100" />
                            <ColumnDefinition Width="5" />
                            <ColumnDefinition Width="50" />
                        </Grid.ColumnDefinitions>

                        <Button Grid.Column="0" Content="&lt;" Style="{StaticResource FlatButton}" Command="{Binding ReduceRecipeCountCommand}" />

                        <TextBox Grid.Column="2" Text="{Binding RecipeCountText.Value, UpdateSourceTrigger=PropertyChanged}" HorizontalContentAlignment="Center" VerticalContentAlignment="Center">
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="TextChanged">
                                    <commonViews:InteractiveCommand Command="{Binding RecipeCountTextChangedCommand}" />
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                        </TextBox>

                        <Button Grid.Column="4" Content="&gt;" Style="{StaticResource FlatButton}" Command="{Binding IncreaseRecipeCountCommand}" />
                    </Grid>

                </Grid>

                <Grid Grid.Row="2">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="500" />
                        <ColumnDefinition Width="5" />
                        <ColumnDefinition />
                    </Grid.ColumnDefinitions>

                    <ListBox ItemsSource="{Binding Materials}" SelectedItem="{Binding MaterialSelectedItem.Value}" BorderThickness="1" Background="Transparent" ScrollViewer.HorizontalScrollBarVisibility="Disabled">
                        <ListBox.ItemContainerStyle>
                            <Style TargetType="ListBoxItem">
                                <Setter Property="HorizontalContentAlignment" Value="Stretch"/>

                                <Style.Triggers>
                                    <Trigger Property="IsSelected" Value="True">
                                        <Setter Property="Background" Value="#4090ff"/>
                                        <Setter Property="BorderBrush" Value="#4090ff" />
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </ListBox.ItemContainerStyle>
                        <ListBox.ItemsPanel>
                            <ItemsPanelTemplate>
                                <WrapPanel ItemHeight="120" ItemWidth="120" HorizontalAlignment="Center" />
                            </ItemsPanelTemplate>
                        </ListBox.ItemsPanel>
                        <ListBox.ItemTemplate>
                            <DataTemplate>
                                <Grid>
                                    <StackPanel>
                                        <TextBlock Text="{Binding Name}" FontSize="13" Foreground="White" HorizontalAlignment="Center" TextWrapping="WrapWithOverflow" />
                                        <Label Content="{Binding Count}" FontSize="18" HorizontalAlignment="Center" />
                                    </StackPanel>

                                </Grid>
                            </DataTemplate>
                        </ListBox.ItemTemplate>
                    </ListBox>

                    <Grid Grid.Column="2">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="30" />
                            <RowDefinition />
                            <RowDefinition Height="30" />
                            <RowDefinition />
                        </Grid.RowDefinitions>

                        <Label Content="▼ 素材入手先"  />

                        <ListView ItemsSource="{Binding MaterialSelectedItem.Value.LocationItems}" Grid.Row="1" BorderThickness="1" Background="Transparent">
                            <ListView.View>
                                <GridView>
                                    <GridViewColumn Width="100" Header="素材名" DisplayMemberBinding="{Binding Path=Name}" />
                                    <GridViewColumn Width="140" Header="場所" DisplayMemberBinding="{Binding Path=Location}" />
                                </GridView>
                            </ListView.View>
                        </ListView>

                        <Label Grid.Row="2" Content="▼ 使用料理"  />

                        <ListBox ItemsSource="{Binding MaterialSelectedItem.Value.UsedRecipes}" Grid.Row="3" BorderThickness="1" Background="Transparent" ScrollViewer.HorizontalScrollBarVisibility="Disabled">

                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="MouseDoubleClick">
                                    <i:InvokeCommandAction Command="{Binding UsedRecipesMouseDoubleClickCommand}" CommandParameter="{Binding RelativeSource={RelativeSource AncestorType=ListBox}, Path=SelectedItem}" />
                                </i:EventTrigger>
                            </i:Interaction.Triggers>

                            <ListBox.ItemTemplate>
                                <DataTemplate>
                                    <Border Name="bd">
                                        <Grid>
                                            <Label Content="{Binding Name}" Foreground="White" VerticalAlignment="Center" FontSize="12" />
                                        </Grid>
                                    </Border>

                                    <DataTemplate.Triggers>
                                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ListBoxItem}}, Path=IsSelected}" Value="true">
                                            <Setter Property="Background" Value="#4090ff" TargetName="bd" />
                                            <Setter Property="BorderBrush" Value="#FF2B4A76" TargetName="bd" />
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ListBoxItem}}, Path=IsMouseOver}" Value="true">
                                            <Setter Property="Background" Value="#444" TargetName="bd" />
                                            <Setter Property="BorderBrush" Value="#444" TargetName="bd" />
                                        </DataTrigger>
                                    </DataTemplate.Triggers>
                                </DataTemplate>
                            </ListBox.ItemTemplate>

                            <ListBox.ItemContainerStyle>
                                <Style TargetType="{x:Type ListBoxItem}">
                                    <Setter Property="Background" Value="Transparent" />
                                    <Setter Property="BorderBrush" Value="Transparent" />
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                                <Grid>
                                                    <Border
                                                        BorderBrush="{TemplateBinding BorderBrush}"
                                                        BorderThickness="{TemplateBinding BorderThickness}"
                                                        Background="{TemplateBinding Background}">
                                                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalAlignment}" VerticalAlignment="{TemplateBinding VerticalAlignment}" />
                                                    </Border>
                                                </Grid>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </ListBox.ItemContainerStyle>
                        </ListBox>
                    </Grid>
                </Grid>
                
            </Grid>
        </Grid>
    </Grid>

</Window>

<Window x:Class="CookInformationViewer.Views.Searches.SearchWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:CookInformationViewer.Views.Searches"
        xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
        xmlns:commonViews="clr-namespace:CommonStyleLib.Views;assembly=CommonStyleLib"
        xmlns:behaviors="clr-namespace:CookInformationViewer.Views.Behaviors"
        xmlns:viewModels="clr-namespace:CookInformationViewer.ViewModels.Searchers"
        xmlns:models="clr-namespace:CookInformationViewer.Models.Searchers"
        xmlns:controls="clr-namespace:CookInformationViewer.Views.UserControls"
        xmlns:converters="clr-namespace:CookInformationViewer.Views.Converters"
        xmlns:dataValue="clr-namespace:CookInformationViewer.Models.DataValue"
        mc:Ignorable="d"
        d:DataContext="{d:DesignInstance viewModels:SearchWindowViewModel}"
        Title="レシピ検索" Height="500" Width="400" Style="{DynamicResource WindowStyle}">

    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Loaded">
            <i:InvokeCommandAction Command="{Binding Loaded}" />
        </i:EventTrigger>
        <i:EventTrigger EventName="Closing">
            <i:InvokeCommandAction Command="{Binding Closing}" />
        </i:EventTrigger>
        <i:EventTrigger EventName="Activated">
            <i:InvokeCommandAction Command="{Binding Activated}" />
        </i:EventTrigger>
        <i:EventTrigger EventName="Deactivated">
            <i:InvokeCommandAction Command="{Binding Deactivated}" />
        </i:EventTrigger>
        <i:EventTrigger EventName="StateChanged">
            <i:InvokeCommandAction Command="{Binding StateChanged}" />
        </i:EventTrigger>
        <i:EventTrigger EventName="KeyDown">
            <commonViews:InvokeDelegateCommandAction Command="{Binding KeyDown}" CommandParameter="{Binding RelativeSource={RelativeSource Self}, Path=InvokeParameter}" />
        </i:EventTrigger>
    </i:Interaction.Triggers>

    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/Styles/Window.xaml" />
                <ResourceDictionary Source="/Styles/Button.xaml" />
                <ResourceDictionary Source="/Styles/ListBoxItem.xaml" />
                <ResourceDictionary Source="/Styles/Gauge.xaml" />
                <ResourceDictionary Source="pack://application:,,,/CommonStyleLib;component/Styles/Icon.xaml" />
                <ResourceDictionary Source="pack://application:,,,/CommonStyleLib;component/Styles/Main.xaml" />
                <ResourceDictionary Source="pack://application:,,,/CommonStyleLib;component/Styles/ListBoxStyle.xaml" />
                <ResourceDictionary>

                </ResourceDictionary>
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </Window.Resources>

    <Grid Style="{StaticResource ResourceKey=BackgroundGrid}">

        <Grid Grid.ColumnSpan="2" Margin="{Binding MainWindowMargin}">

            <StackPanel Orientation="Horizontal" Margin="5,0,0,0"
                        HorizontalAlignment="left"
                        VerticalAlignment="Top">
                <Image Source="{StaticResource Icon}" Width="15" Height="15" Stretch="Uniform" WindowChrome.IsHitTestVisibleInChrome="True">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="MouseDown">
                            <commonViews:InteractiveCommand Command="{Binding ImageMouseDown}" />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </Image>
                <Label Content="レシピ検索" Style="{StaticResource ResourceKey=StatTitle}" />
            </StackPanel>
            <StackPanel Orientation="Horizontal" Margin="5"
                        HorizontalAlignment="Right"
                        VerticalAlignment="Top">
                <Button Name="MainWindowMinimumBt" Content="{Binding MainWindowMinimumBtContent}" Style="{StaticResource CaptionButtonStyleKey}" Command="{Binding MainWindowMinimumBtClick}" />
                <Button Name="MainMaximumBt" Content="{Binding MainWindowMaximumBtContent}" Style="{StaticResource CaptionButtonStyleKey}" Command="{Binding MainWindowMaximumBtClick}" />
                <Button Name="MainWindowCloseBt" Content="{Binding MainWindowCloseBtContent}" Style="{StaticResource CaptionButtonStyleKey}" Command="{Binding MainWindowCloseBtClick}" />
            </StackPanel>

            <Grid Margin="5,25,5,5">

                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="5" />
                    <RowDefinition />
                </Grid.RowDefinitions>

                <Grid VerticalAlignment="Top">
                    <Grid.RowDefinitions>
                        <RowDefinition />
                        <RowDefinition Height="5" />
                        <RowDefinition />
                        <RowDefinition Height="5" />
                        <RowDefinition />
                        <RowDefinition Height="5" />
                        <RowDefinition />
                    </Grid.RowDefinitions>

                    <Grid Height="25">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="5" />
                            <ColumnDefinition />
                        </Grid.ColumnDefinitions>

                        <Label Content="検索ワード" />
                        <TextBox Text="{Binding SearchText.Value}" Grid.Column="2" />
                    </Grid>

                    <Grid Grid.Row="2">
                        <CheckBox IsChecked="{Binding IsMaterialSearch.Value}" Content="素材検索" />
                    </Grid>

                    <Grid Grid.Row="4">
                        <Grid.RowDefinitions>
                            <RowDefinition />
                            <RowDefinition Height="5" />
                            <RowDefinition />
                        </Grid.RowDefinitions>

                        <CheckBox Content="ステータス検索" IsChecked="{Binding IsStatusSearch.Value}" />

                        <Border Grid.Row="2" Padding="5" BorderThickness="1" BorderBrush="{StaticResource BorderColor}" IsEnabled="{Binding IsStatusSearch.Value}">
                            <StackPanel>
                                <ComboBox ItemsSource="{Binding StatusItems}" SelectedItem="{Binding SelectedStatusItem.Value}">
                                    <ComboBox.ItemTemplate>
                                        <DataTemplate>
                                            <Label Content="{Binding Name}" />
                                        </DataTemplate>
                                    </ComboBox.ItemTemplate>
                                </ComboBox>
                                <CheckBox Margin="0,5,0,0" Content="フェスティバルフード不可を除く" IsChecked="{Binding IgnoreNotFestival.Value}" />
                            </StackPanel>
                        </Border>
                    </Grid>

                    <Grid Grid.Row="6">
                        <Button Content="検索" Width="100" Height="30" HorizontalAlignment="Right" Style="{StaticResource FlatButton}" Command="{Binding SearchCommand}" />
                    </Grid>
                </Grid>

                <Grid Grid.Row="2">
                    <ListBox Name="RecipesListBox" ItemsSource="{Binding RecipesList}" Background="Transparent" Foreground="White" BorderThickness="1" BorderBrush="{StaticResource BorderColor}" Style="{StaticResource NonGridListBox2}">

                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="MouseDoubleClick">
                                <i:InvokeCommandAction Command="{Binding SearchSelectedItemChangedCommand}" CommandParameter="{Binding RelativeSource={RelativeSource AncestorType=ListBox}, Path=SelectedItem}" />
                            </i:EventTrigger>
                        </i:Interaction.Triggers>

                        <ListBox.ItemTemplate>
                            <DataTemplate DataType="{x:Type dataValue:RecipeHeader}">
                                <Border Name="bd">
                                    <Grid>
                                        <Grid Margin="5" Visibility="{Binding IsHeader, Converter={converters:ReverseBooleanVisibilityConverter}}">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="40" />
                                                <ColumnDefinition Width="5" />
                                                <ColumnDefinition />
                                            </Grid.ColumnDefinitions>

                                            <Image Source="{Binding Recipe.Image}" />

                                            <Grid Grid.Column="2">
                                                <Grid.RowDefinitions>
                                                    <RowDefinition />
                                                    <RowDefinition />
                                                    <RowDefinition />
                                                </Grid.RowDefinitions>

                                                <Label Content="{Binding Recipe.Name}" Padding="0" Foreground="{Binding Recipe.Foreground}" />
                                                <StackPanel Grid.Row="1" Orientation="Horizontal">
                                                    <Label Content="確認済み " Padding="0"  />
                                                    <Label Content="{Binding Recipe.StarText}" Foreground="{Binding Recipe.StarBrush}" Padding="0"  />
                                                </StackPanel>
                                                <Label Grid.Row="2" Content="{Binding Additional}" Padding="0"  />
                                            </Grid>
                                        </Grid>

                                        <Grid Name="Header" Visibility="{Binding IsHeader, Converter={converters:BooleanVisibilityConverter}}">
                                            <Label Content="{Binding Category.Name}" VerticalAlignment="Center" />
                                        </Grid>
                                    </Grid>
                                </Border>

                                <DataTemplate.Triggers>
                                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ListBoxItem}}, Path=IsSelected}" Value="true">
                                        <Setter Property="Background" Value="#4090ff" TargetName="bd" />
                                        <Setter Property="BorderBrush" Value="#FF2B4A76" TargetName="bd" />
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ListBoxItem}}, Path=IsMouseOver}" Value="true">
                                        <Setter Property="Background" Value="#444" TargetName="bd" />
                                        <Setter Property="BorderBrush" Value="#444" TargetName="bd" />
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding IsHeader}" Value="true">
                                        <Setter Property="Background" Value="Transparent" TargetName="bd" />
                                        <Setter Property="BorderBrush" Value="Transparent" TargetName="bd" />
                                    </DataTrigger>
                                </DataTemplate.Triggers>
                            </DataTemplate>
                        </ListBox.ItemTemplate>

                        <ListBox.ItemContainerStyle>
                            <Style TargetType="{x:Type ListBoxItem}">
                                <Setter Property="IsSelected" Value="{Binding Path=Recipe.IsSelected}"/>

                                <Setter Property="Background" Value="Transparent" />
                                <Setter Property="BorderBrush" Value="Transparent" />
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                            <Grid>
                                                <Border
                                                        BorderBrush="{TemplateBinding BorderBrush}"
                                                        BorderThickness="{TemplateBinding BorderThickness}"
                                                        Background="{TemplateBinding Background}">
                                                    <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalAlignment}" VerticalAlignment="{TemplateBinding VerticalAlignment}" />
                                                </Border>
                                            </Grid>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </ListBox.ItemContainerStyle>
                    </ListBox>
                </Grid>
            </Grid>

        </Grid>
    </Grid>
</Window>
